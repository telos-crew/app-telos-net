stages:  
  - build  
  - deploy

build_dev:  
  image: node:latest
  stage: build  
  only:
    - dev
  environment:
    name: dev
  variables:
    APP_NAME: '"Telos Test Net"'
    NETWORK_BLOCKCHAIN: '"eos"'
    NETWORK_CHAIN_ID: '"1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f"'
    NETWORK_HOST: '"testnet.telos.caleos.io"'
    NETWORK_PORT: '443'
    NETWORK_PROTOCOL: '"https"'
    BLOCKCHAIN_EXPLORER: '"https://telos-test.bloks.io"'
    WEBSERVICES_URL: '"https://api-dev.telos.net"'
    GOOGLE_ANALYTICS: '"UA-154600181-3"'
    IMGUR_CLIENT_ID: '"b6f46df9d1da9d9"'
  cache:
    paths:
      - node_modules/
  script:    
     # Install vuecli    
    - yarn global add @quasar/cli
    # Install dependencies
    - yarn install
    # Deploy chain manifests config file based on env
    - mv src/statics/chain-manifests-dev.json src/statics/chain-manifests.json 
    # Build App    
    - yarn build  
  artifacts:    
    paths:      
      # Build folder      
      - dist/    
    expire_in: 1 hour

build_prod:  
  image: node:latest
  stage: build  
  only:
    - master
  environment:
    name: production
  variables:
    APP_NAME: '"Telos Net"'
    NETWORK_BLOCKCHAIN: '"eos"'
    NETWORK_CHAIN_ID: '"4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11"'
    NETWORK_HOST: '"telos.caleos.io"'
    NETWORK_PORT: '443'
    NETWORK_PROTOCOL: '"https"'
    BLOCKCHAIN_EXPLORER: '"https://telos.bloks.io"'
    WEBSERVICES_URL: '"https://api.telos.net"'
    GOOGLE_ANALYTICS: '"UA-154600181-2"'
    IMGUR_CLIENT_ID: '"b6f46df9d1da9d9"'
  cache:
    paths:
      - node_modules/
  script:    
    # Install vuecli    
    - yarn global add @quasar/cli    
    # Install dependencies    
    - yarn install
    # Deploy chain manifests config file based on env
    - mv src/statics/chain-manifests-prod.json src/statics/chain-manifests.json
    # Build App    
    - yarn build  
  artifacts:    
    paths:      
      # Build folder      
      - dist/    
    expire_in: 1 hour

  
deploy_dev:  
  image: python:latest  
  stage: deploy  
  only:    
    - dev
  environment:
    name: dev
  script:    
    - echo $CI_ENVIRONMENT_NAME
    - pip install awscli    
    - aws configure set aws_access_key_id $AWS_KEY
    - aws configure set aws_secret_access_key $AWS_SECRET
    - aws s3 rm s3://telos-toolkit-dev
    - aws s3 sync ./dist/spa s3://telos-toolkit-dev
    - aws cloudfront create-invalidation --distribution-id $AWS_DIST_ID --paths "/*"

deploy_prod:  
  image: python:latest  
  stage: deploy  
  only:    
    - master  
  environment:
    name: production
  script:    
    - echo $CI_ENVIRONMENT_NAME
    - pip install awscli    
    - aws configure set aws_access_key_id $AWS_KEY
    - aws configure set aws_secret_access_key $AWS_SECRET
    - aws s3 rm s3://telos-toolkit-prod
    - aws s3 sync ./dist/spa s3://telos-toolkit-prod
    - aws cloudfront create-invalidation --distribution-id $AWS_DIST_ID --paths "/*"